"""adding author category table

Revision ID: 50231beff0de
Revises: 76e21236e0af
Create Date: 2025-09-20 15:55:22.357046

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '50231beff0de'
down_revision: Union[str, Sequence[str], None] = '76e21236e0af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Authors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Authors_id'), 'Authors', ['id'], unique=False)
    op.create_index(op.f('ix_Authors_name'), 'Authors', ['name'], unique=False)
    op.create_table('Categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Categories_id'), 'Categories', ['id'], unique=False)
    op.create_table('BookCategory',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['Books.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['Categories.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'category_id')
    )
    op.create_table('BookDetails',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isbn', sa.String(), nullable=False),
    sa.Column('pages', sa.Integer(), nullable=False),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['Books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_BookDetails_id'), 'BookDetails', ['id'], unique=False)
    op.add_column('Books', sa.Column('author_id', sa.Integer(), nullable=True))
    op.drop_index(op.f('ix_Books_author'), table_name='Books')
    op.create_foreign_key(None, 'Books', 'Authors', ['author_id'], ['id'])
    op.drop_column('Books', 'year')
    op.drop_column('Books', 'publisher')
    op.drop_column('Books', 'author')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Books', sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('Books', sa.Column('publisher', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('Books', sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'Books', type_='foreignkey')
    op.create_index(op.f('ix_Books_author'), 'Books', ['author'], unique=False)
    op.drop_column('Books', 'author_id')
    op.drop_index(op.f('ix_BookDetails_id'), table_name='BookDetails')
    op.drop_table('BookDetails')
    op.drop_table('BookCategory')
    op.drop_index(op.f('ix_Categories_id'), table_name='Categories')
    op.drop_table('Categories')
    op.drop_index(op.f('ix_Authors_name'), table_name='Authors')
    op.drop_index(op.f('ix_Authors_id'), table_name='Authors')
    op.drop_table('Authors')
    # ### end Alembic commands ###
